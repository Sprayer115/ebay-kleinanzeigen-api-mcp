# Server-side deployment configuration for SSE transport
# Simplified version for use with existing reverse proxy (Nginx Proxy Manager, Traefik, Caddy, etc.)
# This exposes the MCP server on port 8000 - configure your reverse proxy to handle HTTPS/SSL

version: '3.9'

services:
  # Kleinanzeigen MCP Server (SSE mode)
  kleinanzeigen-mcp:
    image: kleinanzeigen-mcp:latest
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: kleinanzeigen-mcp
    environment:
      # Enable SSE transport mode
      TRANSPORT_MODE: sse
      
      # Server configuration
      HOST: 0.0.0.0
      PORT: 8000
      
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      
      # Authentication (optional - can be handled by reverse proxy)
      MCP_API_KEY: ${MCP_API_KEY}
    ports:
      - "${MCP_PORT:-8000}:8000"  # Expose for reverse proxy
    restart: unless-stopped
    networks:
      - mcp-network
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/sse"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    profiles:
      - monitoring
    container_name: mcp-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    restart: unless-stopped
    networks:
      - mcp-network

  # Optional: Monitoring with Grafana
  grafana:
    image: grafana/grafana:latest
    profiles:
      - monitoring
    container_name: mcp-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
      GF_INSTALL_PLUGINS: grafana-clock-panel
      GF_SERVER_ROOT_URL: ${GRAFANA_URL:-http://localhost:3000}
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    restart: unless-stopped
    networks:
      - mcp-network
    depends_on:
      - prometheus

networks:
  mcp-network:
    driver: bridge

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
